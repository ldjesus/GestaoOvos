// <auto-generated />
using System;
using GestaoOvos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestaoOvos.Migrations
{
    [DbContext(typeof(GestaoOvosContext))]
    [Migration("20230801175614_SegundaMigration")]
    partial class SegundaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoOvos.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cpf");

                    b.Property<string>("Endereco");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GestaoOvos.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento");
                });

            modelBuilder.Entity("GestaoOvos.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<double>("ValorBase");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("GestaoOvos.Models.Quantidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<int>("Qtd");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Quantidade");
                });

            modelBuilder.Entity("GestaoOvos.Models.StatusEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusEntrega");
                });

            modelBuilder.Entity("GestaoOvos.Models.StatusPgto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusPgto");
                });

            modelBuilder.Entity("GestaoOvos.Models.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataPagamento");

                    b.Property<DateTime>("DataVenda");

                    b.Property<int>("FormaPagamentoId");

                    b.Property<int>("ProdutoId");

                    b.Property<int>("Qtd");

                    b.Property<int?>("QuantidadeId");

                    b.Property<int>("StatusEntregaId");

                    b.Property<int>("StatusPgtoId");

                    b.Property<double>("Total");

                    b.Property<int>("VendedorId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("QuantidadeId");

                    b.HasIndex("StatusEntregaId");

                    b.HasIndex("StatusPgtoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("GestaoOvos.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("GestaoOvos.Models.Vendas", b =>
                {
                    b.HasOne("GestaoOvos.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoOvos.Models.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoOvos.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoOvos.Models.Quantidade", "Quantidade")
                        .WithMany()
                        .HasForeignKey("QuantidadeId");

                    b.HasOne("GestaoOvos.Models.StatusEntrega", "StatusEntrega")
                        .WithMany()
                        .HasForeignKey("StatusEntregaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoOvos.Models.StatusPgto", "StatusPgto")
                        .WithMany()
                        .HasForeignKey("StatusPgtoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestaoOvos.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
